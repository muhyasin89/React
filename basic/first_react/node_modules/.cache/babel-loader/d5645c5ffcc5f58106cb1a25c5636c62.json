{"ast":null,"code":"import _classCallCheck from \"/home/muhammad/personal/react/react-transversy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/muhammad/personal/react/react-transversy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/muhammad/personal/react/react-transversy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/muhammad/personal/react/react-transversy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/muhammad/personal/react/react-transversy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/muhammad/personal/react/react-transversy/src/components/Todoitem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport var TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  function TodoItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getStyle = function () {\n      // if(this.props.todo.completed){\n      //     return  {\n      //         textDecoration: 'line-through'\n      //     }\n      // }else{\n      //     return {\n      //         textDecoration: 'none'\n      //     }\n      // }\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: _this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n      return React.createElement(\"div\", {\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.props.markComplete.bind(this, id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), \" \", ' ', title, React.createElement(\"button\", {\n        onClick: this.props.delTodo.bind(this, id),\n        style: btnStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return TodoItem;\n}(Component); //Proptypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nvar btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 10px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};\nexport default TodoItem;","map":{"version":3,"sources":["/home/muhammad/personal/react/react-transversy/src/components/Todoitem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","id","title","markComplete","bind","delTodo","btnStyle","propTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACIC,QADJ,GACe,YAAM;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAO;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ1D,OAAP;AAMH,KAlBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAqBW;AAAA,6BACa,KAAKF,KAAL,CAAWC,IADxB;AAAA,UACAE,EADA,oBACAA,EADA;AAAA,UACIC,KADJ,oBACIA,KADJ;AAEP,aACE;AAAK,QAAA,KAAK,EAAG,KAAKT,QAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,OAC6E,GAD7E,EAEEC,KAFF,EAGA;AAAQ,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BH,EAA9B,CAAjB;AAAoD,QAAA,KAAK,EAAEK,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHA,CADF,CADF;AASD;AAhCH;;AAAA;AAAA,EAA8BhB,SAA9B,E,CAmCA;;AACAE,QAAQ,CAACe,SAAT,GAAqB;AACjBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADN,CAArB;AAIA,IAAMH,QAAQ,GAAG;AACbZ,EAAAA,UAAU,EAAE,SADC;AAEbgB,EAAAA,KAAK,EAAE,MAFM;AAGbC,EAAAA,MAAM,EAAE,MAHK;AAIbhB,EAAAA,OAAO,EAAE,UAJI;AAKbiB,EAAAA,YAAY,EAAE,KALD;AAMbC,EAAAA,MAAM,EAAE,SANK;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAjB;AAUA,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        // if(this.props.todo.completed){\n        //     return  {\n        //         textDecoration: 'line-through'\n        //     }\n        // }else{\n        //     return {\n        //         textDecoration: 'none'\n        //     }\n        // }\n\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n\n  render() {\n    const {id, title} = this.props.todo;\n    return (\n      <div style={ this.getStyle() }>\n        <p>\n        <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\n        { title }\n        <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>X</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n//Proptypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}